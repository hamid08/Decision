@using Decision.Common.Extentions
@using Decision.Common.HtmlHelpers
@model Decision.ViewModel.Applicant.AddApplicantViewModel
@{
    ViewBag.Title = "درج متقاضی جدید";
}
@using (Html.BeginForm(MVC.Applicant.Create(), FormMethod.Post, new { role = "form", @class = "form-horizontal", autocomplete = "off", id = "createApplicantForm", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.PhotoScan)
    @Html.HiddenFor(model => model.CopyOfBirthCertificateScan)
    @Html.HiddenFor(model => model.CopyOfNationalCardScan)

    <div class="panel panel-default">
        <div class="panel-heading">
            <div class="row">
                <div class="col-md-12">
                    @Html.HelpAlert(Url.Content("~/Content/Images/lightbulb.png"),
                    "در صورت عمل نکردن دکمه ثبت،توجه داشته باشید که تمام اطلاعات را در تمام تب های موجود صحیح وارد کرده باشید",
                    "برای فایل های ضمیمه مربوط به متقاضی از امکان آپلود تصاویر یا اسکن  میتوانید بهره مند شوید."
           )
                </div>
            </div>

        </div>
        <div class="panel-body">
            <div class="row">
                <div class="col-md-1">
                    <button type="button" autocomplete="off" onclick="AjaxForm.CustomSubmit(this, 'createApplicantForm')" data-loading-text="در حال ارسال اطلاعات" class="btn btn-success btn-md">
                        ثبت اطلاعات متقاضی
                    </button>
                </div>

            </div>
            <hr class="margin-bottom-5 margin-top-5" />
            <ul class="nav nav-tabs">
                <li class="active">
                    <a href="#baseInfo" data-toggle="tab">اطلاعات پایه</a>
                </li>
                <li>
                    <a href="#other" data-toggle="tab">سایر اطلاعات</a>
                </li>
                
                <li>
                    <a href="#files" data-toggle="tab">فایل های ضمیمه</a>
                </li>
            </ul>
            <div class="tab-content">
                <div class="tab-pane active" id="baseInfo">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-9">
                                    @Html.NoAutoCompleteTextBoxFor(model => model.FirstName)
                                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-9">
                                    @Html.NoAutoCompleteTextBoxFor(model => model.LastName)
                                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.NationalCode, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-9">
                                    @Html.NoAutoCompleteTextBoxForLtr(model => model.NationalCode)
                                    @Html.ValidationMessageFor(model => model.NationalCode, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.BirthCertificateNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-9">
                                    @Html.NoAutoCompleteTextBoxForLtr(model => model.BirthCertificateNumber)
                                    @Html.ValidationMessageFor(model => model.BirthCertificateNumber, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.Gender, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                                </div>
                                @Html.LabelFor(model => model.MarriageStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.MarriageStatus, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.MarriageStatus, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.BirthPlaceState, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.DropDownListFor(model => model.BirthPlaceState,
                            Model.StatesForBirthPlace, "انتخاب استان محل تولد", new
                            {
                                @class = "form-control cascade",
                                data_tofill = "BirthPlaceCity",
                                data_lable = "انتخاب شهر محل تولد",
                                data_selects = "BirthPlaceCity",
                                data_url = Url.Action(MVC.City.GetCities())
                            })
                                    @Html.ValidationMessageFor(model => model.BirthPlaceState, "", new { @class = "text-danger" })
                                </div>
                                @Html.LabelFor(model => model.BirthPlaceCity, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-3">
                                    @Html.DropDownListFor(model => model.BirthPlaceCity, Model.CitiesForBirthPlace, "انتخاب شهر محل تولد", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.BirthPlaceCity, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.BirthDate, MVC.Shared.Views.EditorTemplates.PersianDatePicker)
                                    @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="tab-pane" id="other">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                @Html.LabelFor(model => model.FatherName, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-9">
                                    @Html.NoAutoCompleteTextBoxFor(model => model.FatherName)
                                    @Html.ValidationMessageFor(model => model.FatherName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Email, htmlAttributes: new {@class = "control-label col-md-2"})
                                <div class="col-md-9">
                                    @Html.NoAutoCompleteTextBoxForLtr(model => model.Email)
                                    @Html.ValidationMessageFor(model => model.Email, "", new {@class = "text-danger"})
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.CellphoneNumber, htmlAttributes: new {@class = "control-label col-md-2"})
                                <div class="col-md-9">
                                    @Html.NoAutoCompleteTextBoxForLtr(model => model.CellphoneNumber)
                                    @Html.ValidationMessageFor(model => model.CellphoneNumber, "", new {@class = "text-danger"})
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new {@class = "control-label col-md-2"})
                                <div class="col-md-9">
                                    @Html.NoAutoCompleteTextBoxForLtr(model => model.PhoneNumber)
                                    @Html.ValidationMessageFor(model => model.PhoneNumber, "", new {@class = "text-danger"})
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.NumberIndispensable, htmlAttributes: new {@class = "control-label col-md-2"})
                                <div class="col-md-9">
                                    @Html.NoAutoCompleteTextBoxForLtr(model => model.NumberIndispensable)
                                    @Html.ValidationMessageFor(model => model.NumberIndispensable, "", new {@class = "text-danger"})
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.MilitaryStatus, htmlAttributes: new {@class = "control-label col-md-2"})
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.MilitaryStatus, new {@class = "form-control"})
                                    @Html.ValidationMessageFor(model => model.MilitaryStatus, "", new {@class = "text-danger"})
                                </div>
                                @Html.LabelFor(model => model.MembershipType, htmlAttributes: new {@class = "control-label col-md-2"})
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.MembershipType, new {@class = "form-control"})
                                    @Html.ValidationMessageFor(model => model.MembershipType, "", new {@class = "text-danger"})
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.ServedEndOn, htmlAttributes: new {@class = "control-label col-md-2"})
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.ServedEndOn, MVC.Shared.Views.EditorTemplates.PersianDatePicker)
                                    @Html.ValidationMessageFor(model => model.ServedEndOn, "", new {@class = "text-danger"})
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Gilder, htmlAttributes: new {@class = "control-label col-md-2"})
                                <div class="col-md-9">
                                    @Html.NoAutoCompleteTextBoxFor(model => model.Gilder)
                                    @Html.ValidationMessageFor(model => model.Gilder, "", new {@class = "text-danger"})
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Nationality, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-9">
                                    @Html.NoAutoCompleteTextBoxFor(model => model.Nationality)
                                    @Html.ValidationMessageFor(model => model.Nationality, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                

                <div class="tab-pane" id="files">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                @Html.LabelFor(model => model.CopyOfNationalCardFile, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.CopyOfNationalCardFile, new { type = "file", @class = "form-control" })
                                </div>
                                <div class="col-md-4">
                                    <button type="button" autocomplete="off" data-type="image" data-container="CopyOfNationalCardScan" class="btn btn-primary   btn-sm @(Model.CopyOfNationalCardScan.HasValue() ? "scan-remove" : "scan")">
                                        @if (Model.CopyOfNationalCardScan.HasValue())
                                        {<text>
                                <i class="fa fa-remove"></i>
                                حذف فایل اسکن شده
                                        </text>
                                        }
                                        else
                                        {<text>
                                <i class="fa fa-file-photo-o"></i>
                                افزودن اسکن
                                        </text>
                                        }
                                    </button>
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.CopyOfBirthCertificateFile, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.CopyOfBirthCertificateFile, new { type = "file", @class = "form-control" })
                                </div>
                                <div class="col-md-4">
                                    <button type="button" autocomplete="off" data-type="image" data-container="CopyOfBirthCertificateScan" class="btn btn-primary   btn-sm @(Model.CopyOfNationalCardScan.HasValue() ? "scan-remove" : "scan")">
                                        @if (Model.CopyOfBirthCertificateScan.HasValue())
                                        {<text>
                                <i class="fa fa-remove"></i>
                                حذف فایل اسکن شده
                                        </text>
                                        }
                                        else
                                        {<text>
                                <i class="fa  fa-file-photo-o"></i>
                                افزودن اسکن
                                        </text>
                                        }
                                    </button>
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.PhotoFile, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.PhotoFile, new { type = "file", @class = "form-control" })
                                </div>
                                <div class="col-md-4">
                                    <button type="button" autocomplete="off" data-type="image" data-container="PhotoScan" class="btn btn-primary   btn-sm @(Model.CopyOfNationalCardScan.HasValue() ? "scan-remove" : "scan")">
                                        @if (Model.PhotoScan.HasValue())
                                        {<text>
                                <i class="fa fa-remove"></i>
                                حذف فایل اسکن شده
                                        </text>
                                        }
                                        else
                                        {<text>
                                <i class="fa fa-file-photo-o"></i>
                                افزودن اسکن
                                        </text>
                                        }
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
@section Menu{
    @{Html.RenderPartial(MVC.Shared.Views._ApplicantManagementsSidbarMenu);}
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/datePicker")
}

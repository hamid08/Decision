@model Decision.ViewModel.Question.AddQuestionViewModel
@{
    var optionId = Model.Options != null && Model.Options.Any() ? Model.Options.Count : 0;
  }
<div class="row">
    <div class="col-md-12">
        @using (Html.BeginForm(MVC.Question.Create(), FormMethod.Post, new { @class = "form-horizontal", id = "createQuestionForm", autocomplete = "off" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-9">
                    @Html.NoAutoCompleteTextBoxFor(model => model.Title)
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.NoAutoCompleteTextBoxForNumber(model => model.Weight)
                    @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
                </div>
            </div>

           
            if (Model.Options != null && Model.Options.Any())
            {
                for (var i = 0; i < Model.Options.Count; i++)
                {
                    <div class="form-group option">
                        @Html.Label("Options[" + i + "].Name","متن گزینه", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.TextBox("Options[" + i + "].Name",Model.Options.ElementAt(i).Name, new { @class = "form-control" })
                            @Html.ValidationMessage("Options[" + i + "].Name", "", new { @class = "text-danger" })
                        </div>
                        @Html.Label("Options[" + i + "].Weight","وزن ارزش گزینه", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-3">
                            @Html.TextBox("Options[" + i + "].Weight", Model.Options.ElementAt(i).Weight, new { @class = "form-control" ,dir="ltr"})
                            @Html.ValidationMessage("Options[" + i + "].Weight", "", new { @class = "text-danger" })
                        </div>
                    </div>

                }
            }
           
            <div class="form-group" id="questionSubmit">
                <div class="col-md-6 col-md-offset-2">
                    <button type="button" id="createQuestionButton" autocomplete="off" onclick="formDataSubmitWidOutEditor(this, 'createQuestionForm', '#questionList', '#create-question')" data-loading-text="در حال ارسال اطلاعات" class="btn btn-success btn-md">
                        ثبت سوال جدید
                    </button>
                    @*<button onclick="generateOption(this, @optionId, '#questionSubmit')" style="display: @display;" type="button"
                            class="btn btn-default btn-md option">افزودن گزینه</button>*@
                  
                </div>
               
            </div>
        }
    </div>
</div>

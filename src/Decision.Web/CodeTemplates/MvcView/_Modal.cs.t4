<#@ template language="C#" HostSpecific="True" #>
<#@ output extension=".cshtml" #>
<#@ include file="Imports.include.t4" #>
@model <#= ViewDataTypeName #>



<div class="modal-dialog">
    <div class="modal-content">
        <div class="modal-header alert alert-success text-center">
            <div class="row">
                <div class="col-md-3">
                    <h5>درج استان</h5>
                </div>
                <div class="col-md-9 pull-left">
                    <button type="button" class="close text-info" data-dismiss="modal" aria-hidden="true">
                        &times;
                    </button>
                </div>
            </div>
        </div>
        <div class="modal-body">
 @using (Ajax.BeginForm(MVC.State.Create(), new AjaxOptions { UpdateTargetId = "modal", InsertionMode = InsertionMode.Replace, HttpMethod = "POST", OnSuccess = "AjaxForm.ResetButton('')", OnComplete = "" }, new { @class = "form-horizontal", id = "", autocomplete = "off" })){
    @Html.AntiForgeryToken()
    

<#
foreach (PropertyMetadata property in ModelMetadata.Properties) {
    if (property.Scaffold && !property.IsAutoGenerated && !property.IsReadOnly && !property.IsAssociation) {
#>
        <div class="form-group">
<#
        // If the property is a primary key and Guid, then the Guid is generated in the controller. Hence, this propery is not displayed on the view.
        if (property.IsPrimaryKey && IsPropertyGuid(property)) {
            continue;
        }

        if (property.IsForeignKey) {
#>
            @Html.LabelFor(model => model.<#= property.PropertyName #>, "<#= GetAssociationName(property) #>", new { @class = "control-label col-md-2" })
<#
        } else {
#>
            @Html.LabelFor(model => model.<#= property.PropertyName #>, new { @class = "control-label col-md-2" })
<#
        }
#>
            <div class="col-md-10">
<#
        if (property.IsForeignKey) {
#>
                @Html.DropDownList("<#= property.PropertyName #>", String.Empty)
<#
        } else {
#>
                @Html.EditorFor(model => model.<#= property.PropertyName #>)
<#
        }
#>
                @Html.ValidationMessageFor(model => model.<#= property.PropertyName #>)
            </div>

<#
    }
}
#>
        <div class="form-group">
            <div class="col-md-6 col-md-offset-2">
                        <button type="button" id="" autocomplete="off" onclick="AjaxForm.CustomSubmit(this, '')" data-loading-text="در حال ارسال اطلاعات" class="btn btn-success btn-sm">
                            ثبت استان جدید
                        </button>
                        <button class="btn btn-default btn-sm" data-dismiss="modal" aria-hidden="true">
                            انصراف
             </button>
        </div>
    </div>
}
     </div>
    </div>
</div>
<script>

    AjaxForm.EnableBootstrapStyleValidation();
    AjaxForm.EnablePostbackValidation();
    AjaxForm.EnableAjaxFormvalidate('createStateForm');

</script>

<#@ include file="ModelMetadataFunctions.cs.include.t4" #>